"""
Django settings for beercity project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os.path
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent.parent

AUTH_USER_MODEL = 'users.User'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', 'jt3(w_29i#xc&*rf+$41u_*ffon5e&6+9+l+!7b$5cv*ea9xyj')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', True)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])

# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third part plugins
    'colorfield',
    'debug_toolbar',
    'adminsortable2',
    'django_cleanup',
    'auditlog',
    'ckeditor',
    'ckeditor_uploader',
    'mptt',
    'currencies',
    'easy_select2',
    'rosetta',
    'import_export',
    'singlemodeladmin',

    # apps
    'header',
    'footer',
    'users',
    'shop.apps.ShopConfig',
    'breadcrumbs',
    'wish',
    'cart',
    'videos',
    'flatpages',
    'aboutus',
]

LOCALE_PATHS = [
    BASE_DIR / 'locale'
]

NIKITA_MOBILE_URL = config('NIKITA_MOBILE_URL')
NIKITA_MOBILE_USERNAME = config('NIKITA_MOBILE_USERNAME')
NIKITA_MOBILE_PASSWORD = config('NIKITA_MOBILE_PASSWORD')

# NUMBER_GROUPING = 3
# THOUSAND_SEPARATOR = '.'
# DECIMAL_SEPARATOR = '.'
# USE_THOUSAND_SEPARATOR = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'auditlog.middleware.AuditlogMiddleware',
    'beercity.utils.GlobalRequestMiddleware',
]

ROOT_URLCONF = 'beercity.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'currencies.context_processors.currencies',
            ]
        },
    },
]

WSGI_APPLICATION = 'beercity.wsgi.application'

CUSTOM_CONTEXT_PROCESSORS = [
    'beercity.context_processors.partners',
    'beercity.context_processors.informative_links',
    'beercity.context_processors.footer_categories',
    'beercity.context_processors.social_buttons',
    'beercity.context_processors.bank_icons',
    'beercity.context_processors.contact_us_page_iframe',
    'beercity.context_processors.get_year',
    'beercity.context_processors.get_site',
    'beercity.context_processors.to_header_items',
    'beercity.context_processors.to_header_items_two',
    'beercity.context_processors.bottom_header_items',
    'beercity.context_processors.header_categories',
    'beercity.context_processors.check_bonus_day_actuality',
    'beercity.context_processors.get_domain',
    'wish.context_processors.get_wish',
    'cart.context_processors.get_cart',
    'beercity.context_processors.delete_user',
]

TEMPLATES[0]['OPTIONS']['context_processors'] += CUSTOM_CONTEXT_PROCESSORS

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'hy'

from django.utils.translation import gettext_lazy as _

LANGUAGES = [
    ('hy', _('Armenian')),
    ('ru', _('Russian')),
    ('en', _('English')),
]

CURRENCY = 'AMD'

CURRENCIES = (

    ('Armenian Dram', ('AMD')),
    ('Russian Ruble', ('RUB')),
    ('United States Dollar', ('USD')),
    ('EURO', ('EUR'))

)

TIME_ZONE = 'Asia/Yerevan'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

CKEDITOR_UPLOAD_PATH = 'uploads/'

CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        # 'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {'name': 'forms',
             'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                       'HiddenField']},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',

            ]},
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # 'height': 291,
        # 'width': '100%',
        # 'filebrowserWindowHeight': 725,
        # 'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage',  # the upload image feature
            # your extra plugins here
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            # 'devtools',

            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
FURSHET_CATEGORY_SLUG_NAME = 'furshets'
MENU_CATEGORY_SLUG_NAME = 'menu'
SLIDING_COUNT = 16
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL')
EMAIL_HOST_PASSWORD = config('EMAIL_PASS')
EMAIL_PORT = config("PORT", 587)
EMAIL_HOST = config('HOST')
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
